{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2021-09-29T11:23:24.843Z",
    "end": "2021-09-29T11:23:27.413Z",
    "duration": 2570,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3f7ae1f6-c024-4207-af98-c7e594ee46a8",
      "title": "",
      "fullFile": "cypress/integration/Quote API Testing/convert.spec.js",
      "file": "cypress/integration/Quote API Testing/convert.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84111723-63dc-496d-864a-40938df7d02a",
          "title": "Endpoint GET /convert",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should send status 200",
              "fullTitle": "Endpoint GET /convert Should send status 200",
              "timedOut": null,
              "duration": 1799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/convert').then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "ad51d6f9-c2e5-4558-bb4a-f0b66366a634",
              "parentUUID": "84111723-63dc-496d-864a-40938df7d02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Request without API key should send body with error true and message",
              "fullTitle": "Endpoint GET /convert Request without API key should send body with error true and message",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`/convert?${query}`).then(response => {\n  expect(response.status).to.eq(200);\n  let body = response.body;\n  expect(body).to.a('object');\n  expect(body).to.have.keys('error', 'message');\n  expect(body).to.have.property('error', true);\n  expect(body).to.have.property('message', \"API Key Not Valid. Please go to 1forge.com to get an API key. If you have any questions please email us at contact@1forge.com\");\n});",
              "err": {},
              "uuid": "6127dc2a-355a-42ae-8892-1a82acaa6ed7",
              "parentUUID": "84111723-63dc-496d-864a-40938df7d02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Request without parameters should send body with error true and message",
              "fullTitle": "Endpoint GET /convert Request without parameters should send body with error true and message",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('/convert').then(response => {\n  expect(response.status).to.eq(200);\n  let body = response.body;\n  expect(body).to.a('object');\n  expect(body).to.have.keys('error', 'message');\n  expect(body).to.have.property('error', true);\n  expect(body).to.have.property('message', \"You must specify the 'from' parameter indicating which currency you are converting from, eg: ?from=USD. If you need help, please email contact@1forge.com\");\n});",
              "err": {},
              "uuid": "34c4d803-df64-411b-b24f-75eedfa33aaf",
              "parentUUID": "84111723-63dc-496d-864a-40938df7d02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Request with parameters should send an object with value, text, timestamp",
              "fullTitle": "Endpoint GET /convert Request with parameters should send an object with value, text, timestamp",
              "timedOut": null,
              "duration": 236,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(`/convert?${query}&api_key=${apiKey}`).then(response => {\n  expect(response.status).to.eq(200);\n  let body = response.body;\n  expect(body).to.a('object');\n  expect(body).to.have.keys('value', 'text', 'timestamp');\n  expect(body.value).to.be.a('string');\n  expect(body.text).to.be.a('string');\n  expect(body.timestamp).to.be.a('number');\n});",
              "err": {},
              "uuid": "6c1532a3-b305-41d3-9649-b280e10ed807",
              "parentUUID": "84111723-63dc-496d-864a-40938df7d02a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad51d6f9-c2e5-4558-bb4a-f0b66366a634",
            "6127dc2a-355a-42ae-8892-1a82acaa6ed7",
            "34c4d803-df64-411b-b24f-75eedfa33aaf",
            "6c1532a3-b305-41d3-9649-b280e10ed807"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2546,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/report",
        "overwrite": true,
        "html": true,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "5.2.0"
    }
  }
}